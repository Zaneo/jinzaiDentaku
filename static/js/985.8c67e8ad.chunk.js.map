{"version":3,"file":"static/js/985.8c67e8ad.chunk.js","mappings":"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","sources":["routes/AcademicVisaForm.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Tooltip, Form, OverlayTrigger, Container } from \"react-bootstrap\";\r\n\r\n\r\nconst renderResearchPaperToolTip = (props) => (\r\n    <Tooltip id=\"button-tooltip\" {...props}>\r\n        Author of research papers which appeared in an academic magazine registered in an academic research paper database used by Japanese national organizations.\r\n    </Tooltip>\r\n  );\r\n\r\nclass AcademicVisaForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            degreeTypes: ['Doctors', 'Masters', 'Bachelors', 'Additional'],\r\n            yearsWorkExperienceBrackets: [7, 5, 3],\r\n            salaryBracketsMillion: [10, 9, 8, 7, 6, 5, 4, 3],\r\n            score: 0,\r\n            visaType: \"academic\"\r\n        };\r\n\r\n        this.handleCheckedChanged = this.handleCheckedChanged.bind(this);\r\n        this.calculateVisaPoints = this.calculateVisaPoints.bind(this);\r\n        this.handleValueChanged = this.handleValueChanged.bind(this);\r\n    }\r\n\r\n    handleValueChanged(event){\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        }, this.calculateVisaPoints);\r\n    }\r\n\r\n    handleCheckedChanged(event){\r\n        this.setState({\r\n            [event.target.name]: event.target.checked\r\n        }, this.calculateVisaPoints);\r\n    }\r\n\r\n    calculateVisaPoints() {\r\n        let currentScore = 0;\r\n\r\n        // Academic degree related points\r\n        if ( this.state.hasDoctorsDegree ){\r\n            currentScore += this.state.visaType === \"business\" ? 20 : 30;\r\n        } else if ( this.state.hasMastersDegree ) {\r\n            currentScore += 20;\r\n        } else if ( this.state.hasBachelorsDegree ){\r\n            currentScore += 10;\r\n        }\r\n        if ( this.state.hasAdditionalDegree){\r\n            currentScore += 5;\r\n        }\r\n        console.log(this.state);\r\n\r\n        // Work experience related points\r\n        // Salary brackets change based on age\r\n        let initialWorkExperiencePoints = 0;\r\n\r\n        if (this.state.visaType === \"academic\"){\r\n            initialWorkExperiencePoints = 15;\r\n        } else if (this.state.visaType === \"technical\") {\r\n            initialWorkExperiencePoints = 20;\r\n        } else if (this.state.visaType === \"business\") {\r\n            initialWorkExperiencePoints = 25;\r\n        }\r\n\r\n\r\n        let yearsWorkExperience = parseInt(this.state.yearsWorkExperience)\r\n        for (let i = 0; i < this.state.yearsWorkExperienceBrackets.length; i++) {\r\n            if ( yearsWorkExperience === this.state.yearsWorkExperienceBrackets[i]){\r\n                currentScore += initialWorkExperiencePoints - 5*i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        // minSalaryBracket doesn't apply to business visa\r\n        let minSalaryBracketIndex = this.state.salaryBracketsMillion.length;\r\n\r\n        // Age points don't apply to business visa\r\n        if (this.state.visaType === \"academic\" || this.state.visaType === \"technical\"){\r\n            \r\n            let age = parseInt(this.state.age);\r\n\r\n            // Age related points\r\n            if (age < 29 ){\r\n                currentScore += 15;\r\n            } else if (age < 35 ){\r\n                currentScore += 10;\r\n                minSalaryBracketIndex -= 2;\r\n            } else if (age < 40 ){\r\n                currentScore += 5;\r\n                minSalaryBracketIndex -= 3;\r\n            }\r\n            else {\r\n                minSalaryBracketIndex -= 5;\r\n            }\r\n        }\r\n\r\n        let salary = parseInt(this.state.salary);\r\n        // Salary brackets change based on age\r\n        for (let i = 0; i < this.state.salaryBracketsMillion.length; i++) {\r\n            if ( salary >= this.state.salaryBracketsMillion[i] && minSalaryBracketIndex > i){\r\n                currentScore += 40 - 5*i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (this.state.visaType === \"academic\" || this.state.visaType === \"technical\"){\r\n            let researchPoints = this.state.visaType === \"academic\" ? 20 : 15;\r\n\r\n            let researchAchieved = 0;\r\n\r\n            if (this.state.hasPatent){\r\n                researchAchieved += 1;\r\n            }\r\n\r\n            if (this.state.receivedGovernmentGrants){\r\n                researchAchieved += 1;\r\n            }\r\n\r\n            if (this.state.hasThreePapers){\r\n                researchAchieved += 1;\r\n            }\r\n            \r\n            if (this.state.hasEquivalentResearchRecord){\r\n                researchAchieved += 1;\r\n            }\r\n\r\n            // Academic visas get extra points for having two\r\n            if (this.state.visaType && researchAchieved >= 2){\r\n                currentScore += researchPoints + 5; \r\n            } else if (researchAchieved >= 1){\r\n                currentScore += researchPoints; \r\n            }\r\n        }\r\n\r\n        // This must go last since having too low a salary invalidates your application\r\n        if (this.state.salary  === \"0\") {\r\n            currentScore = 0;\r\n        }\r\n\r\n        this.setState({\r\n            score: currentScore\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Form>  \r\n                        <Form.Group controlId=\"academic-background\">\r\n                            <Form.Label>Academic Background</Form.Label>\r\n                            {this.state.degreeTypes.map((degreeType) => (\r\n                                <div key={`degree-${degreeType}`} className=\"mb-3\">\r\n                                    <Form.Check \r\n                                        type=\"checkbox\" \r\n                                        id={`degree-${degreeType}`}\r\n                                        name={`has${degreeType}Degree`}\r\n                                        label={`${degreeType} Degree`}\r\n                                        onChange={this.handleCheckedChanged}\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </Form.Group>\r\n                        <br />\r\n                        <Form.Group controlId=\"professional-career\">\r\n                        <Form.Label>Professional Career</Form.Label>\r\n                            {this.state.yearsWorkExperienceBrackets.map((years, index) => (\r\n                                <div key={`yearsWorkExperience-${years}`} className=\"mb-3\">\r\n                                    <Form.Check \r\n                                        type=\"radio\"\r\n                                        id={`yearsWorkExperience-${years}`}\r\n                                        name=\"yearsWorkExperience\"\r\n                                        value={years}\r\n                                        label={index ? `${years}` : `>${years}`} \r\n                                        onChange={this.handleValueChanged}\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                            <div key={`yearsWorkExperience-below-minimum`} className=\"mb-3\">\r\n                                    <Form.Check \r\n                                        type=\"radio\"\r\n                                        id={`yearsWorkExperience-below-minimum`}\r\n                                        name=\"yearsWorkExperience\"\r\n                                        value={0}\r\n                                        label={`<${this.state.yearsWorkExperienceBrackets.slice(-1)[0]}`} \r\n                                        onChange={this.handleValueChanged}\r\n                                    />\r\n                                </div>\r\n                        </Form.Group>\r\n                        <br />\r\n                        <Form.Group controlId=\"age\">\r\n                            <Form.Label>Age</Form.Label>\r\n                            <div className=\"mb-3\">\r\n                                <Form.Control\r\n                                    required\r\n                                    name=\"age\"\r\n                                    type=\"number\"\r\n                                    min=\"0\"\r\n                                    value={this.state.age}\r\n                                    onChange={this.handleValueChanged}\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"annual-salary\">\r\n                            <Form.Label>Annual Salary</Form.Label>\r\n                            <div className=\"mb-3\">\r\n                                <select  name=\"salary\" value={this.state.salary} onChange={this.handleValueChanged}>\r\n                                    {this.state.salaryBracketsMillion.map((salaryBracket) => (\r\n                                        <option value={salaryBracket}>{`>${salaryBracket} million yen`}</option>\r\n                                    ))}\r\n                                    <option value={0}>{`<${this.state.salaryBracketsMillion.slice(-1)[0]} million yen`}</option>\r\n                                </select>\r\n                            </div>\r\n                        </Form.Group>\r\n                        <br />\r\n                        <Form.Group controlId=\"bonus-points\">\r\n                            <Form.Label>Bonus Points</Form.Label>\r\n\r\n                                // Research achievments are only valid for academic or technical visa\r\n                                if (this.state.visaType === \"academic\" || this.state.visaType === \"technical\"){\r\n                                <Form.Group controlId=\"bonus-points-academic\">\r\n                                    <Form.Label>Research Achievements</Form.Label>\r\n                                    <Form.Check\r\n                                        type=\"checkbox\"\r\n                                        name=\"hasPatent\"\r\n                                        value={this.state.hasPatent}\r\n                                        label=\"Hold a patent\"\r\n                                        onChange={this.handleCheckedChanged}\r\n                                    />\r\n                                    <Form.Check\r\n                                        type=\"checkbox\"\r\n                                        name=\"receivedGovernmentGrants\"\r\n                                        value={this.state.receivedGovernmentGrants}\r\n                                        label=\"Received at least 3 public research grants\"\r\n                                        onChange={this.handleCheckedChanged}\r\n                                    />\r\n                                    <OverlayTrigger\r\n                                        placement=\"right\"\r\n                                        overlay={renderResearchPaperToolTip}\r\n                                    >\r\n                                        <Form.Check\r\n                                            type=\"checkbox\"\r\n                                            name=\"hasThreePapers\"\r\n                                            value={this.state.hasThreePapers}\r\n                                            label=\"Publish 3 papers in Japanese database\"\r\n                                            tool\r\n                                            onChange={this.handleCheckedChanged}\r\n                                        />\r\n                                    </OverlayTrigger>\r\n                                    <Form.Check\r\n                                        type=\"checkbox\"\r\n                                        name=\"hasEquivalentResearchRecord\"\r\n                                        value={this.state.hasEquivalentResearchRecord}\r\n                                        label=\"Equivalent research record\"\r\n                                        onChange={this.handleCheckedChanged}\r\n                                    />\r\n                             </Form.Group>\r\n                            }\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Container>\r\n                <div>\r\n                    <h2>{this.state.score}</h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AcademicVisaForm;"],"names":["renderResearchPaperToolTip","props","id","AcademicVisaForm","state","degreeTypes","yearsWorkExperienceBrackets","salaryBracketsMillion","score","visaType","handleCheckedChanged","bind","calculateVisaPoints","handleValueChanged","event","this","setState","target","name","value","checked","currentScore","hasDoctorsDegree","hasMastersDegree","hasBachelorsDegree","hasAdditionalDegree","console","log","initialWorkExperiencePoints","yearsWorkExperience","parseInt","i","length","minSalaryBracketIndex","age","salary","researchPoints","researchAchieved","hasPatent","receivedGovernmentGrants","hasThreePapers","hasEquivalentResearchRecord","controlId","map","degreeType","className","type","label","onChange","years","index","slice","required","min","salaryBracket","placement","overlay","tool","React"],"sourceRoot":""}